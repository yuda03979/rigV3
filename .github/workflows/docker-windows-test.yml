name: Docker Windows Test
on:
  push:
    branches: [ async_validation ]
  pull_request:
    branches: [ async_validation ]

jobs:
  test:
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v2

        # Install Docker and WSL 2
      - name: Install Docker and WSL 2
        run: |
          wsl --install
          choco install docker-desktop --confirm
        shell: powershell

        # Ensure Docker is set to Linux containers
      - name: Set Docker to Linux Containers
        run: |
          Start-Process -Wait -NoNewWindow -FilePath "C:\Program Files\Docker\Docker\Docker Desktop.exe"
          Start-Sleep -s 10
          Stop-Process -Name "Docker Desktop"
          wsl --set-default-version 2
        shell: powershell

        # Verify Docker Installation
      - name: Verify Docker Installation
        run: docker version

      # Create necessary directories
      - name: Create directories
        run: |
          mkdir C:\data_dir
          mkdir C:\rig_models
          mkdir C:\rig_modelfiles
        shell: cmd

      # Create .env file with Windows paths
      - name: Create .env file
        run: |
          echo PROJECT_DIR=/c/data_dir > .env
          echo CLASSIFICATION_THRESHOLD=0.005 >> .env
          echo CLASSIFICATION_TEMPERATURE=0.02 >> .env
          echo EXAMPLES_RAG_THRESHOLD=0.9 >> .env
          echo GENERATION_MODEL_NAME=gemma-2-2b-it-Q8_0:rig >> .env
          echo GENERATION_MODEL2_NAME=Falcon3-3B-Instruct-q4_k_m:rig >> .env
          echo RAG_MODEL_NAME=snowflake-arctic-embed-137m:rig >> .env
          echo MODELS_DIRECTORY=/c/rig_models >> .env
          echo GGUF_AND_MODELFILE_LOCATION=/c/rig_modelfiles >> .env
        shell: cmd

      - name: Build image
        run: docker build --platform linux/amd64 -t rig .

      - name: Run docker compose
        run: docker compose up -d

      # Add any other necessary steps...

      - name: Cleanup
        run: docker compose down